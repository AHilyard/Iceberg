plugins {
	id 'io.github.goooler.shadow'
}

loom {
	forge {
		mixinConfig "iceberg.mixins.json"
	}
}

architectury {
	platformSetupLoomIde()
	forge()
}

configurations {
	common {
		canBeResolved = true
		canBeConsumed = false
	}
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentForge.extendsFrom common

	// Files in this configuration will be bundled into your mod using the Shadow plugin.
	// Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
	shadowBundle {
		canBeResolved = true
		canBeConsumed = false
	}
}

dependencies {
	forge "net.minecraftforge:forge:$rootProject.forgeVersion"

	common(project(path: ':common', configuration: 'namedElements')) { transitive false }
	shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
	inputs.property 'version', project.version

	filesMatching('META-INF/mods.toml') {
		expand version: project.version
	}
}

shadowJar {
	configurations = [project.configurations.shadowBundle]
	archiveClassifier = ""
	destinationDirectory = file("$buildDir/../../output")
}

remapJar {
	enabled = false
	input.set shadowJar.archiveFile
}
